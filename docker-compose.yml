version: '3'
services:
  odoo14:
    container_name: workshop-odoo14
    image: bishalkaucha/bloopark-odoo:14.0
    depends_on:
      - db
    ports:
      - "8069:8069"
    tty: true
    stdin_open: true
    volumes:
      - odoo-odoo14-data:/var/lib/odoo
      - ./config/odoo.conf:/etc/odoo.conf
      - ./addons:/odoo/custom-addons
    restart: always # run as a service
  db:
    container_name: workshop-db
    image: postgres:12
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5542:5432"
    restart: always # run as a service
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
  pgadmin:
    container_name: workshop-pgadmin
    image: dpage/pgadmin4:4.28
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@bloopark.de
      PGADMIN_DEFAULT_PASSWORD: 1234
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8099:80"
    restart: always
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
        - "db:psql-workshop-server"
volumes:
  odoo-odoo14-data:
  odoo-db-data:
  pgadmin-data:

# Start odoo server from outside the workshop-odoo14 container
# docker-compose exec odoo14 python3 /odoo/odoo/odoo-bin --config=/etc/odoo.conf

# Test your modules
# docker-compose exec odoo14 python3 /odoo/odoo/odoo-bin --config=/etc/odoo.conf -p 8080 -i/u modules,modules2 -d db_name --test-enable --stop-after-init

# Use script inside docker as odoo user
# cd ~ && python3 /odoo/odoo/odoo-bin --config=/etc/odoo.conf -p 8080 -i/i install_module1,install_module2 -d db_name --test-enable --stop-after-init

## Run unit tests for specific file
# docker-compose exec odoo14 python3 /odoo/odoo/odoo-bin --config=/etc/odoo.conf -p 8080 -d db_name --stop-after-init --test-file /odoo/bloopark-addons/<path_until_test_file>.py